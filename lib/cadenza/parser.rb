#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.7
# from Racc grammer file "".
#

require 'racc/parser.rb'

# parser.rb : generated by racc
  
module Cadenza
  class Parser < Racc::Parser

module_eval(<<'...end cadenza.y/module_eval...', 'cadenza.y', 139)
attr_reader :lexer, :container_name

def initialize(options={})
  @lexer = options.fetch(:lexer, Cadenza::Lexer.new)

  raise "Lexers passed to the parser must define next_token" unless @lexer.respond_to?(:next_token)

  raise "Lexers passed to the parser must define source=" unless @lexer.respond_to?(:source=)
end

def parse(source)
  @lexer.source = source

  @stack = [DocumentNode.new]

  do_parse

  @stack.first
end

def push_child(node)
  @stack.last.children.push(node)
end

def push_block(block_node)
  @stack.first.add_block(block_node)
  push_child(block_node)
end

def next_token
  @lexer.next_token
end
...end cadenza.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    33,    19,    20,    21,    22,    23,     3,     3,     4,     4,
    81,    33,    86,     3,    87,     4,    91,    82,    85,    33,
     6,     6,    28,    88,    58,    80,    29,     6,   107,    30,
    33,    31,    32,    28,    71,   106,    55,    29,    95,    54,
    30,    28,    31,    32,    33,    29,    37,    38,    30,   102,
    31,    32,    28,     3,    53,    99,    29,    52,     3,    30,
     4,    31,    32,     3,    79,     4,    28,     6,    83,    84,
    29,    78,     6,    30,    97,    31,    32,     6,     3,     3,
   104,   103,     3,     3,    59,     4,    41,    42,    43,    44,
    45,    46,     6,     6,    81,    60,     6,     6,    77,    74,
    41,    42,    43,    44,    45,    46,    41,    42,    43,    44,
    45,    46,    37,    38,    48,    76,    47,    41,    42,    43,
    44,    45,    46,    41,    42,    43,    44,    45,    46,    19,
    20,    21,    22,    23,    19,    20,    21,    22,    23,    19,
    20,    21,    22,    23,    19,    20,    21,    22,    23,    19,
    20,    21,    22,    23,    19,    20,    21,    22,    23,    19,
    20,    21,    22,    23,    19,    20,    21,    22,    23,    19,
    20,    21,    22,    23,    19,    20,    21,    22,    23,    19,
    20,    21,    22,    23,    19,    20,    21,    22,    23,    19,
    20,    21,    22,    23,    19,    20,    21,    22,    23,    19,
    20,    21,    22,    23,    39,    40,    39,    40,    39,    40,
    39,    40,    39,    40,    39,    40,    37,    38,    39,    40,
    75,    71,    51,    50,   105,    35,    15,   108,   109 ]

racc_action_check = [
   104,    33,    33,    33,    33,    33,    97,     5,    97,     5,
    57,   103,    73,    98,    73,    98,    83,    57,    71,    99,
    97,     5,   104,    75,    33,    55,   104,    98,   104,   104,
     4,   104,   104,   103,    86,   103,    32,   103,    88,    32,
   103,    99,   103,   103,    59,    99,    63,    63,    99,    99,
    99,    99,     4,    96,    31,    96,     4,    31,     2,     4,
     2,     4,     4,     0,    54,     0,    59,    96,    59,    59,
    59,    53,     2,    59,    92,    59,    59,     0,   101,   100,
   101,   100,    34,    89,    34,    89,    49,    49,    49,    49,
    49,    49,   101,   100,    93,    36,    34,    89,    52,    49,
    36,    36,    36,    36,    36,    36,    27,    27,    27,    27,
    27,    27,    64,    64,    27,    51,    27,    90,    90,    90,
    90,    90,    90,    56,    56,    56,    56,    56,    56,    40,
    40,    40,    40,    40,    41,    41,    41,    41,    41,    42,
    42,    42,    42,    42,    85,    85,    85,    85,    85,    39,
    39,    39,    39,    39,    45,    45,    45,    45,    45,    46,
    46,    46,    46,    46,    38,    38,    38,    38,    38,    37,
    37,    37,    37,    37,    81,    81,    81,    81,    81,    23,
    23,    23,    23,    23,     3,     3,     3,     3,     3,    28,
    28,    28,    28,    28,    44,    44,    44,    44,    44,    43,
    43,    43,    43,    43,    65,    65,    26,    26,    67,    67,
    68,    68,    69,    69,    70,    70,    25,    25,    66,    66,
    50,    48,    30,    29,   102,    15,     1,   106,   107 ]

racc_action_pointer = [
    42,   226,    37,   182,    28,   -14,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   225,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   177,   nil,   208,   196,    94,   187,   221,
   220,    52,    34,    -1,    61,   nil,    88,   167,   162,   147,
   127,   132,   137,   197,   192,   152,   157,   nil,   219,    74,
   191,    90,    73,    46,    39,     0,   111,    -8,   nil,    42,
   nil,   nil,   nil,    38,   104,   194,   208,   198,   200,   202,
   204,    -1,   nil,    -8,   nil,    21,   nil,   nil,   nil,   nil,
   nil,   172,   nil,    -9,   nil,   142,    32,   nil,    13,    62,
   105,   nil,    49,    76,   nil,   nil,    32,   -15,    -8,    17,
    58,    57,   199,     9,    -2,   nil,   202,   203,   nil,   nil ]

racc_action_default = [
    -2,   -55,    -1,   -55,   -55,   -55,   -43,   -44,   -45,   -46,
   -47,   -48,   -49,   -51,   -53,   -55,   -50,   -52,   -54,    -3,
    -4,    -5,    -6,   -55,    -8,   -11,   -14,   -55,   -55,   -55,
   -55,   -55,   -55,   -55,   -55,   110,   -55,   -55,   -55,   -55,
   -55,   -55,   -55,   -55,   -55,   -55,   -55,   -27,   -55,   -55,
   -55,   -55,   -55,   -55,   -55,   -55,   -21,   -55,   -41,   -55,
    -7,    -9,   -10,   -12,   -13,   -15,   -16,   -17,   -18,   -19,
   -20,   -23,   -25,   -55,   -29,   -55,   -35,   -37,   -38,   -39,
   -40,   -55,   -42,   -55,   -31,   -55,   -55,   -28,   -55,   -55,
   -22,   -30,   -55,   -24,   -26,   -33,   -55,   -55,   -55,   -55,
   -55,   -55,   -55,   -55,   -55,   -36,   -55,   -55,   -32,   -34 ]

racc_goto_table = [
    16,    27,    18,    57,    72,    98,     2,    92,    17,    61,
    62,    34,    65,    66,    67,    68,    69,    70,    63,    64,
    89,    36,    73,     1,   nil,   nil,    49,   nil,   nil,   nil,
   nil,   nil,    16,   nil,    18,   nil,   nil,   nil,   nil,   nil,
    17,   nil,    94,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    93,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    90,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    16,    96,    18,   nil,    16,    16,
    18,    18,    17,   100,   101,   nil,    17,    17 ]

racc_goto_check = [
    21,     4,    16,     7,     8,    15,     2,    13,    18,     3,
     3,     2,     6,     6,     6,     6,     6,     6,     5,     5,
    17,     4,     9,     1,   nil,   nil,     4,   nil,   nil,   nil,
   nil,   nil,    21,   nil,    16,   nil,   nil,   nil,   nil,   nil,
    18,   nil,     8,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    21,     2,    16,   nil,    21,    21,
    16,    16,    18,     2,     2,   nil,    18,    18 ]

racc_goto_pointer = [
   nil,    23,     6,   -28,    -2,   -21,   -29,   -30,   -44,   -26,
   nil,   nil,   nil,   -77,   nil,   -90,     0,   -56,     6,   nil,
   nil,    -2 ]

racc_goto_default = [
   nil,   nil,   nil,    24,    56,    25,    26,   nil,   nil,   nil,
     7,     5,     8,   nil,     9,   nil,    14,   nil,    13,    10,
    11,    12 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 37, :_reduce_none,
  0, 37, :_reduce_2,
  1, 39, :_reduce_3,
  1, 39, :_reduce_4,
  1, 39, :_reduce_5,
  1, 39, :_reduce_6,
  3, 39, :_reduce_7,
  1, 41, :_reduce_none,
  3, 41, :_reduce_9,
  3, 41, :_reduce_10,
  1, 42, :_reduce_none,
  3, 42, :_reduce_12,
  3, 42, :_reduce_13,
  1, 40, :_reduce_none,
  3, 40, :_reduce_15,
  3, 40, :_reduce_16,
  3, 40, :_reduce_17,
  3, 40, :_reduce_18,
  3, 40, :_reduce_19,
  3, 40, :_reduce_20,
  1, 43, :_reduce_21,
  3, 43, :_reduce_22,
  1, 44, :_reduce_23,
  3, 44, :_reduce_24,
  1, 45, :_reduce_25,
  3, 45, :_reduce_26,
  3, 46, :_reduce_27,
  5, 46, :_reduce_28,
  4, 47, :_reduce_29,
  5, 48, :_reduce_30,
  0, 49, :_reduce_31,
  10, 48, :_reduce_32,
  0, 51, :_reduce_33,
  11, 50, :_reduce_34,
  0, 53, :_reduce_35,
  9, 52, :_reduce_36,
  4, 54, :_reduce_37,
  4, 54, :_reduce_38,
  4, 55, :_reduce_39,
  4, 55, :_reduce_40,
  3, 56, :_reduce_41,
  4, 56, :_reduce_42,
  1, 57, :_reduce_43,
  1, 57, :_reduce_none,
  1, 57, :_reduce_none,
  1, 57, :_reduce_none,
  1, 57, :_reduce_none,
  1, 57, :_reduce_none,
  1, 38, :_reduce_49,
  2, 38, :_reduce_50,
  1, 38, :_reduce_51,
  2, 38, :_reduce_52,
  1, 38, :_reduce_53,
  2, 38, :_reduce_54 ]

racc_reduce_n = 55

racc_shift_n = 110

racc_token_table = {
  false => 0,
  :error => 1,
  :IDENTIFIER => 2,
  :INTEGER => 3,
  :REAL => 4,
  :STRING => 5,
  "(" => 6,
  ")" => 7,
  "*" => 8,
  "/" => 9,
  "+" => 10,
  "-" => 11,
  :OP_EQ => 12,
  :OP_NEQ => 13,
  :OP_LEQ => 14,
  :OP_GEQ => 15,
  ">" => 16,
  "<" => 17,
  "," => 18,
  ":" => 19,
  "|" => 20,
  :VAR_OPEN => 21,
  :VAR_CLOSE => 22,
  :STMT_OPEN => 23,
  :IF => 24,
  :STMT_CLOSE => 25,
  :ENDIF => 26,
  :ELSE => 27,
  :FOR => 28,
  :IN => 29,
  :ENDFOR => 30,
  :BLOCK => 31,
  :ENDBLOCK => 32,
  :EXTENDS => 33,
  :RENDER => 34,
  :TEXT_BLOCK => 35 }

racc_nt_base = 36

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IDENTIFIER",
  "INTEGER",
  "REAL",
  "STRING",
  "\"(\"",
  "\")\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "OP_EQ",
  "OP_NEQ",
  "OP_LEQ",
  "OP_GEQ",
  "\">\"",
  "\"<\"",
  "\",\"",
  "\":\"",
  "\"|\"",
  "VAR_OPEN",
  "VAR_CLOSE",
  "STMT_OPEN",
  "IF",
  "STMT_CLOSE",
  "ENDIF",
  "ELSE",
  "FOR",
  "IN",
  "ENDFOR",
  "BLOCK",
  "ENDBLOCK",
  "EXTENDS",
  "RENDER",
  "TEXT_BLOCK",
  "$start",
  "target",
  "document",
  "primary_expression",
  "boolean_expression",
  "multiplicative_expression",
  "additive_expression",
  "parameter_list",
  "filter",
  "filter_list",
  "inject_statement",
  "if_statement",
  "if_block",
  "@1",
  "for_block",
  "@2",
  "block_block",
  "@3",
  "extends_statement",
  "render_statement",
  "generic_statement",
  "document_component" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'cadenza.y', 5)
  def _reduce_2(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 9)
  def _reduce_3(val, _values, result)
     result = VariableNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 10)
  def _reduce_4(val, _values, result)
     result = ConstantNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 11)
  def _reduce_5(val, _values, result)
     result = ConstantNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 12)
  def _reduce_6(val, _values, result)
     result = ConstantNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 13)
  def _reduce_7(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 8 omitted

module_eval(<<'.,.,', 'cadenza.y', 18)
  def _reduce_9(val, _values, result)
     result = ArithmeticNode.new(val[0], "*", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 19)
  def _reduce_10(val, _values, result)
     result = ArithmeticNode.new(val[0], "/", val[2]) 
    result
  end
.,.,

# reduce 11 omitted

module_eval(<<'.,.,', 'cadenza.y', 24)
  def _reduce_12(val, _values, result)
     result = ArithmeticNode.new(val[0], "+", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 25)
  def _reduce_13(val, _values, result)
     result = ArithmeticNode.new(val[0], "-", val[2]) 
    result
  end
.,.,

# reduce 14 omitted

module_eval(<<'.,.,', 'cadenza.y', 30)
  def _reduce_15(val, _values, result)
     result = BooleanNode.new(val[0], "==", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 31)
  def _reduce_16(val, _values, result)
     result = BooleanNode.new(val[0], "!=", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 32)
  def _reduce_17(val, _values, result)
     result = BooleanNode.new(val[0], "<=", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 33)
  def _reduce_18(val, _values, result)
     result = BooleanNode.new(val[0], ">=", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 34)
  def _reduce_19(val, _values, result)
     result = BooleanNode.new(val[0], ">", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 35)
  def _reduce_20(val, _values, result)
     result = BooleanNode.new(val[0], "<", val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 39)
  def _reduce_21(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 40)
  def _reduce_22(val, _values, result)
     result = val[0].push(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 44)
  def _reduce_23(val, _values, result)
     result = FilterNode.new(val[0].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 45)
  def _reduce_24(val, _values, result)
     result = FilterNode.new(val[0].value, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 49)
  def _reduce_25(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 50)
  def _reduce_26(val, _values, result)
     result = val[0].push(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 54)
  def _reduce_27(val, _values, result)
     result = InjectNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 55)
  def _reduce_28(val, _values, result)
     result = InjectNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 61)
  def _reduce_29(val, _values, result)
            @stack.push DocumentNode.new
        result = val[2]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 69)
  def _reduce_30(val, _values, result)
            result = IfNode.new(val[0], @stack.pop.children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 72)
  def _reduce_31(val, _values, result)
     @stack.push DocumentNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 75)
  def _reduce_32(val, _values, result)
            false_children, true_children = @stack.pop.children, @stack.pop.children
        result = IfNode.new(val[0], true_children, false_children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 82)
  def _reduce_33(val, _values, result)
     @stack.push DocumentNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 86)
  def _reduce_34(val, _values, result)
            iterator = VariableNode.new(val[2].value)
        iterable = VariableNode.new(val[4].value)
        
        result = ForNode.new(iterator, iterable, @stack.pop.children)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 95)
  def _reduce_35(val, _values, result)
     @stack.push DocumentNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 98)
  def _reduce_36(val, _values, result)
     result = BlockNode.new(val[2].value, @stack.pop.children) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 102)
  def _reduce_37(val, _values, result)
     result = val[2].value 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 103)
  def _reduce_38(val, _values, result)
     result = VariableNode.new(val[2].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 107)
  def _reduce_39(val, _values, result)
     result = RenderNode.new(val[2].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 108)
  def _reduce_40(val, _values, result)
     result = RenderNode.new(VariableNode.new(val[2].value)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 112)
  def _reduce_41(val, _values, result)
     result = GenericStatementNode.new(val[1].value) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 113)
  def _reduce_42(val, _values, result)
     result = GenericStatementNode.new(val[1].value, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 117)
  def _reduce_43(val, _values, result)
     result = TextNode.new(val[0].value) 
    result
  end
.,.,

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

module_eval(<<'.,.,', 'cadenza.y', 126)
  def _reduce_49(val, _values, result)
     push_child val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 127)
  def _reduce_50(val, _values, result)
     push_child val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 128)
  def _reduce_51(val, _values, result)
     @stack.first.extends = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 129)
  def _reduce_52(val, _values, result)
     @stack.first.extends = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 130)
  def _reduce_53(val, _values, result)
     push_block(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cadenza.y', 131)
  def _reduce_54(val, _values, result)
     push_block(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Cadenza
