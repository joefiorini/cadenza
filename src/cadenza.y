class Cadenza::Parser

rule
  target: primary_expression;

  primary_expression:
    : INTEGER { result = ConstantNode.new(val[0]) }
    | /* none */ { result = nil }
    ;

---- header ----
# parser.rb : generated by racc
  
---- inner ----
attr_reader :lexer

def initialize(options={})
  @lexer = options.fetch(:lexer, Cadenza::Lexer.new)

  raise "Lexers passed to the parser must define next_token" unless @lexer.respond_to?(:next_token)

  raise "Lexers passed to the parser must define source=" unless @lexer.respond_to?(:source=)
end

def parse(source)
  @lexer.source = source
  @document_stack = [DocumentNode.new]
  do_parse
  @document_stack
end

def next_token
  @lexer.next_token
end